{"version":3,"sources":["data/assets/alldone.png","store/actions/signup-action.js","store/actions/users-action.js","components/FormHeader.jsx","containers/Registration.jsx","data/Constants.js","components/ButtonsGroup.jsx","components/PhoneNumber.jsx","containers/AboutUser.jsx","containers/DeliverySchedule.jsx","components/EFTForm.jsx","components/CreditCardForm.jsx","containers/Utils/Utils.jsx","containers/AccountingSetup.jsx","components/TextInput.jsx","containers/AllDone.jsx","components/FinalScreen.jsx","containers/SignUp.jsx","store/reducer/signup.js","store/reducer/users.js","middleware/logger.js","middleware/validator.js","store/store.js","components/Header.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","CREATE","createUser","user","type","payload","SAVE","uuid","require","saveUser","data","Object","objectSpread","id","FormHeader","props","headerText","react_default","a","createElement","className","Registration","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","event","changedBit","defineProperty","target","name","value","setState","state","error","password","confirmPassword","isUserDuplicate","onSubmit","preventDefault","email","isDuplicateEmailFound","goNext","users","filter","toLowerCase","length","defaultState","initialState","react","autoComplete","components_FormHeader","TextField_default","required","label","inputProps","maxLength","helperText","placeholder","style","margin","flexBasis","Button_default","variant","color","Component","mapDispatchToProps","connect","signupState","usersState","deliveriesFrom","deliveriesTo","paymentMethods","requestedTerms","financialInstitutionNames","roles","restaurantTypes","ButtonsGroup","buttonText","onClick","goPrevious","TextMaskCustom","inputRef","other","objectWithoutProperties","reactTextMask_default","assign","ref","mask","placeholderChar","PhoneNumberField","phoneNumber","isNumberInvalid","InputProps","inputComponent","AboutUser","toString","replace","handleChange","role","restaurantName","restaurantType","companyAddress","select","map","option","MenuItem_default","key","PhoneNumber","components_ButtonsGroup","DeliverySchedule","specialInstructions","EFT","InputLabel_default","fontWeight","financialInstitutionName","bankBranchAddress","isaccountNumberInvalid","accountNumber","istransitNumberInvalid","transitNumber","CreditCardForm","iscreditCardNumberInvalid","creditCardNumber","nameOnCreditCard","iscreditCardExpiryInvalid","creditCardExpiry","iscvcInvalid","cvc","AccountSetupInitialState","accountingEmail","AccountingSetup","field","setStateAfterVerify","selectPaymentMethod","showEFT","paymentMethod","len","isNaN","checkForValidInput","changedFlag","dataLength","checkForDataLength","EFTForm","components_CreditCardForm","TextInput","AllDone","emailProspect1","emailProspect2","emailProspect3","components_TextInput","FinalScreen","src","allDoneLogo","alt","Signup","nextStep","step","previousStep","containers_Registration","containers_AboutUser","containers_DeliverySchedule","containers_AccountingSetup","containers_AllDone","components_FinalScreen","JSON","parse","window","localStorage","getItem","logger","store","next","action","console","log","getState","output","validator","alert","appReducer","combineReducers","arguments","undefined","keys","userSignupFields","forEach","btoa","toConsumableArray","concat","setItem","stringify","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","HeaderBar","App","es","BrowserRouter","components_Header","Route","exact","path","component","SignUp","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5b96320e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alldone.5b6b9122.png\";","// Actions for User reducer\nexport const CREATE = 'CREATE';\n\n//Action creators for user signup reducer\n\n//This is called by components as user signup process iterates through all steps untill all done\nexport const createUser=(user)=>{\n  return {\n    type:CREATE,\n    payload: user,\n  };\n};\n","// Actions for users reducer\nexport const SAVE = 'SAVE';\nconst uuid = require('uuid/v1');\n\n//Action creators for users reducer\n\n// Save the user finally when user submits on the `All done` page\nexport const saveUser=(data)=>{\n  const user = {...data};\n  user.id = uuid();\n  return {\n    type:SAVE,\n    payload: user,\n  };\n};","import React from 'react';\n\n/**\n  * @param {props} \n  * Header text for each screen throughout signup process \n  */\nconst FormHeader = props=> {\n  const headerText = props.headerText;\n  return (\n    <div className=\"form-header\">\n      <h1>{headerText}</h1>\n    </div>\n  );\n  \n};\n\nexport default FormHeader;","import React, { Fragment, Component } from 'react';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { createUser } from '../store/actions/signup-action';\nimport { saveUser } from '../store/actions/users-action';\nimport FormHeader from '../components/FormHeader';\n\nclass Registration extends Component {\n  constructor(props) {\n    super(props);\n    this.defaultState = {\n      email: '',\n      password: '',\n      confirmPassword:'',\n      error:false,\n      isUserDuplicate:false,\n    };\n    this.initialState = this.props.user || this.defaultState;\n    this.state = { ...this.initialState };\n  }\n  \n  /**\n   * Updates state as it recieves input data Registration form\n   *\n   * @memberof Registration\n   */\n  onChange = event => {\n   \n    const changedBit = {\n      [event.target.name]: event.target.value,\n    };\n    this.setState(changedBit);\n    \n    //This block is only executed when user submits the form without password match criteria\n    //This turns off the red color around confirm password field\n    if(this.state.error){\n      if(event.target.name==='confirmPassword'){\n        const error = this.state.password===changedBit.confirmPassword?false:true;\n        this.setState({error});\n      }\n      else if(event.target.name==='password'){\n        const error = this.state.confirmPassword===changedBit.password?false:true;\n        this.setState({error});\n      }\n    }\n    if(this.state.isUserDuplicate && event.target.name==='email'){\n      this.setState({isUserDuplicate:false});\n    }\n    \n  };\n\n  /**\n   * Handle form submission to go next screen when user press next button\n   * Callback the reducer method to keep holding the data in global state\n   * @memberof Registration\n   */\n  onSubmit = event => {\n    event.preventDefault();\n    let email = this.state.email;\n    if(this.isDuplicateEmailFound(email)){\n      this.setState({isUserDuplicate:true});\n    }\n    else if(this.state.password===this.state.confirmPassword){\n      const data = {...this.state};\n      this.props.goNext();\n      this.props.createUser(data);\n    }\n    else{\n      this.setState({error:true});\n    }\n  };\n\n  /**\n   * @param {user input on EMAIL field} email\n   * @return boolean\n   * @memberof Registration\n   */\n  isDuplicateEmailFound = (email) => {\n    return this.props.users.filter(user => user.email.toLowerCase() === email.toLowerCase())\n      .length > 0\n      ? true\n      : false;\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <form\n          className=\"signup-form\"\n          onSubmit={this.onSubmit}\n          autoComplete=\"off\"\n        >\n          <FormHeader headerText=\"Registration\"/>\n          <div className=\"flex-wrap\">\n            <TextField\n              required\n              type=\"email\"\n              label=\"EMAIL\"\n              className=\"text-field\"\n              inputProps={{maxLength:50}}\n              error= {this.state.isUserDuplicate===true}\n              helperText={this.state.isUserDuplicate?'Email address already registered':''}\n              id=\"email\"\n              placeholder=\"johndoe@example.com\"\n              value={this.state.email || ''}\n              style={{margin:'2%',flexBasis:700}}\n              name=\"email\"\n              onChange={this.onChange}\n            />\n            \n            <TextField\n              required\n              type=\"password\"\n              label=\"PASSWORD\"\n              inputProps={{maxLength:50}}\n              placeholder=\"\"\n              className=\"text-field\"\n              id=\"password\"\n              value={this.state.password || ''}\n              style={{margin:'2%',flexBasis:700}}\n              margin=\"normal\"\n              name=\"password\"\n              onChange={this.onChange}\n            />\n            \n            <TextField\n              required\n              type=\"password\"\n              label=\"CONFIRM PASSWORD\"\n              placeholder=\"\"\n              inputProps={{maxLength:50}}\n              error= {this.state.error}\n              helperText={this.state.password!==this.state.confirmPassword?'passwords do not match':''}\n              className=\"text-field\"\n              value={this.state.confirmPassword || ''}\n              margin=\"normal\"\n              id=\"confirmPassword\"\n              name=\"confirmPassword\"\n              style={{margin:'2%',flexBasis:700}}\n              onChange={this.onChange}\n            />\n            \n            <Button\n              label=\"Submit\"\n              id=\"next\"\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n            >\n            Next\n            </Button>\n          </div>\n        </form>\n      </Fragment>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  user: state.signupState,\n  users: state.usersState,\n});\nconst mapDispatchToProps = {createUser,saveUser};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Registration);\n","/**\n* Select field drop down field name and value pairs\n*/\nexport const deliveriesFrom = ['9:00AM','10:00AM','11:00AM','12:00PM'];\nexport const deliveriesTo= ['1:00PM','2:00PM','3:00PM','4:00PM'];\nexport const paymentMethods = ['EFT (DIRECT DEBIT)', 'CREDIT CARD'];\nexport const requestedTerms = ['CHARGE ON DELIVERY', 'NET 7', 'NET 14'];\nexport const financialInstitutionNames = ['BANK OF NOVA SCOTIA', 'CHASE', 'BANK OF CANADA'];\nexport const roles = ['Head Chef','Sous Chef', 'Purchasing', 'Owner'];\nexport const restaurantTypes= ['One Location','Regional(3-5 Locations)','National Chain','Grocery'];\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\n/**\n  * @param {props}\n  * @return Reusable 'Next' & 'Previous' button group for multiple screens\n  */\nconst ButtonsGroup = props => {\n  const buttonText = props.buttonText || 'NEXT';\n  return (\n    <div className=\"BtnGroup\">\n      <Button\n        label=\"PREVIOUS\"\n        onClick={props.goPrevious}\n        id=\"previous\"\n        type=\"button\"\n        variant=\"contained\"\n        color=\"primary\"\n      >\n        PREVIOUS\n      </Button>\n      <Button\n        label=\"NEXT\"\n        id=\"next-with-previous\"\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n      >\n        {buttonText}\n      </Button>\n    </div>\n  );\n};\n\nexport default ButtonsGroup;\n","import React, { Fragment } from 'react';\nimport MaskedInput from 'react-text-mask';\nimport TextField from '@material-ui/core/TextField';\n\n/**\n  * @param {props} \n  * Generates custom input format with as per regex script in mask field\n  * Third party library to handle format on text input fields\n  */\nconst TextMaskCustom = (props) => {\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={inputRef}\n      mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n      placeholderChar={'\\u2000'}\n    />\n  );\n};\n\n/**\n  * @param {props} \n  * Text input component for phone number field on `About You` screen\n  * @return text input field with phone number format\n  */\nconst PhoneNumberField = props => {\n  const { phoneNumber,onChange,isNumberInvalid } = props;\n  return(\n    <Fragment>\n      <TextField\n        required\n        label=\"PHONE NUMBER\"\n        className=\"text-field\"\n        id=\"phoneNumber\"\n        placeholder=\"(XXX)-XXX-XXXX\"\n        name=\"phoneNumber\"\n        error= {isNumberInvalid===true}\n        helperText={isNumberInvalid?'Invalid Phone Number':''}   \n        style={{margin:'2%',flexBasis:700}}\n        InputProps={{\n          inputComponent: TextMaskCustom,\n          value:phoneNumber,\n          onChange: onChange('phoneNumber'),\n        }}\n      />\n    </Fragment>\n  );\n};\n\n\nexport default PhoneNumberField;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createUser } from '../store/actions/signup-action';\nimport { saveUser } from '../store/actions/users-action';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { roles, restaurantTypes } from '../data/Constants';\nimport ButtonsGroup from '../components/ButtonsGroup';\nimport FormHeader from '../components/FormHeader';\nimport PhoneNumberField from '../components/PhoneNumber';\n\nclass AboutUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.user.name || '',\n      role: this.props.user.role || 'Head Chef',\n      restaurantName: this.props.user.restaurantName || '',\n      restaurantType:\n        this.props.user.restaurantType || 'Regional(3-5 Locations)',\n      phoneNumber: this.props.user.phoneNumber || '',\n      companyAddress: this.props.user.companyAddress || '',\n      isNumberInvalid:false,\n    };\n  }\n\n  /**\n   /**\n   * Handles to go back on the screen when user press previous button\n   * Callback prop method received from parent\n   * Callback the reducer method to keep holding the data in state\n   * @memberof AboutUser\n   */\n  goPrevious = () => {\n    const data = { ...this.state };\n    this.props.goPrevious();\n    this.props.createUser(data);\n  };\n  /**\n   * Handle form submission to go next screen when user press next button\n   * Callback the reducer method to keep holding the data in global state\n   * @memberof AboutUser\n   */\n  onSubmit = event => {\n    event.preventDefault();\n    const data = { ...this.state };\n    const phoneNumberLength = data.phoneNumber.toString().replace(/\\s/g, '').length;\n    if(phoneNumberLength<13){\n      this.setState({isNumberInvalid:true});\n    }\n    else{ \n      this.props.goNext();\n      this.props.createUser(data);\n    }\n  };\n\n  /**\n   * This should be only used when dealng with react-text-mask library\n   * Called by child component when input value changes on the form\n   * @memberof AboutUser\n   */\n  handleChange = name => event => {\n    const changedBit = {\n      [name]: event.target.value,\n    };\n    this.setState(changedBit);\n    const phoneNumberLength = changedBit.phoneNumber.toString().replace(/\\s/g, '').length;\n    if(phoneNumberLength===13){\n      this.setState({isNumberInvalid:false});\n    }\n  };  \n  /**\n   * Updates local state as it recieves input data from input fields\n   *\n   * @memberof AboutUser\n   */\n  onChange = event => {\n    const changedBit = {\n      [event.target.name]: event.target.value,\n    };\n    this.setState(changedBit);\n  };\n\n  render() {\n    return (\n      <form className=\"signup-form\" onSubmit={this.onSubmit} autoComplete=\"off\">\n        <FormHeader headerText=\"About You\" />\n        <div className=\"flex-wrap\">\n          <TextField\n            required\n            label=\"YOUR NAME\"\n            type=\"text\"\n            className=\"text-field\"\n            id=\"name\"\n            inputProps={{maxLength:50}}\n            placeholder=\"YOUR NAME\"\n            value={this.state.name || ''}\n            style={{ margin: '2%', flexBasis: 335 }}\n            name=\"name\"\n            onChange={this.onChange}\n          />\n          <TextField\n            required\n            select\n            label=\"YOUR ROLE\"\n            name=\"role\"\n            className=\"text-field\"\n            id=\"role\"\n            style={{ margin: '2%', flexBasis: 335 }}\n            value={this.state.role || 'Head Chef'}\n            onChange={this.onChange}\n          >\n            {roles.map(option => (\n              <MenuItem key={option} value={option}>\n                {option}\n              </MenuItem>\n            ))}\n          </TextField>\n          <TextField\n            required\n            label=\"RESTAURANT NAME\"\n            type=\"text\"\n            inputProps={{maxLength:50}}\n            className=\"text-field\"\n            id=\"restaurantName\"\n            placeholder=\"RESTAURANT NAME\"\n            value={this.state.restaurantName || ''}\n            name=\"restaurantName\"\n            style={{ margin: '2%', flexBasis: 335 }}\n            onChange={this.onChange}\n          />\n          <TextField\n            required\n            select\n            label=\"RESTAURANT TYPE\"\n            name=\"restaurantType\"\n            className=\"text-field\"\n            id=\"restaurantType\"\n            style={{ margin: '2%', flexBasis: 335 }}\n            value={this.state.restaurantType || 'Regional(3-5 Locations)'}\n            onChange={this.onChange}\n          >\n            {restaurantTypes.map(option => (\n              <MenuItem key={option} value={option}>\n                {option}\n              </MenuItem>\n            ))}\n          </TextField>\n          <PhoneNumberField\n            phoneNumber={this.state.phoneNumber}\n            onChange={this.handleChange}\n            isNumberInvalid={this.state.isNumberInvalid}\n          />\n          <TextField\n            required\n            label=\"COMPANY ADDRESS\"\n            type=\"text\"\n            className=\"text-field\"\n            inputProps={{maxLength:150}}\n            id=\"companyAddress\"\n            placeholder=\"COMPANY ADDRESS\"\n            value={this.state.companyAddress || ''}\n            name=\"companyAddress\"\n            style={{ margin: '2%', flexBasis: 700 }}\n            onChange={this.onChange}\n          />\n          <ButtonsGroup goPrevious={this.goPrevious} />\n        </div>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.signupState,\n  users: state.usersState,\n});\nconst mapDispatchToProps = { createUser, saveUser };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AboutUser);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createUser } from '../store/actions/signup-action';\nimport { saveUser } from '../store/actions/users-action';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { deliveriesFrom,deliveriesTo } from '../data/Constants';\nimport ButtonsGroup from '../components/ButtonsGroup';\nimport FormHeader from '../components/FormHeader';\n\nclass DeliverySchedule extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      deliveriesFrom: this.props.user.deliveriesFrom || '11:00AM',\n      deliveriesTo: this.props.user.deliveriesTo ||'3:00PM',\n      specialInstructions: this.props.user.specialInstructions ||'',\n    };\n  }\n  \n  /**\n   * Handles to go back on the screen when user press previous button\n   * Callback prop method received from parent\n   * Callback the reducer method to keep holding the data in state\n   * @memberof DeliverySchedule\n   */\n  goPrevious = () =>{\n    const data = {...this.state};\n    this.props.goPrevious();\n    this.props.createUser(data);\n  }\n  /**\n   * Handle form submission to go next screen when user press next button\n   * Callback the reducer method to keep holding the data in global state\n   * @memberof DeliverySchedule\n   */\n  onSubmit = event => {\n    event.preventDefault();\n    const data = {...this.state};\n    this.props.goNext();\n    this.props.createUser(data);\n  };\n  \n  /**\n   * Updates state as it recieves input data from text input\n   * \n   * @memberof DeliverySchedule\n   */\n  onChange = event => {\n    const changedBit = {\n      [event.target.name]: event.target.value,\n    };\n    this.setState(changedBit);\n  };\n\n  render() {\n    return (\n      // <div className = \"about-user-form-container\">\n      <form  className=\"signup-form\" onSubmit={this.onSubmit} autoComplete=\"off\">\n        <FormHeader headerText=\"Delivery Schedule\"/>\n        <div className=\"flex-wrap\">\n          <TextField\n            required\n            select\n            label=\"DELIVERIES FROM\"\n            name=\"deliveriesFrom\"\n            className=\"text-field\"\n            id=\"deliveriesFrom\"\n            style={{margin:'2%',flexBasis:335}}\n            value={this.state.deliveriesFrom}\n            onChange={this.onChange}\n          >\n            {deliveriesFrom.map(option => (\n              <MenuItem key={option} value={option}>\n                {option}\n              </MenuItem>\n            ))}\n          </TextField>\n         \n          <TextField\n            required\n            select\n            label=\"DELIVERIES TO\"\n            name=\"deliveriesTo\"\n            className=\"text-field\"\n            id=\"deliveriesTo\"\n            style={{margin:'2%',flexBasis:335}}\n            value={this.state.deliveriesTo}\n            onChange={this.onChange}\n          >\n            {deliveriesTo.map(option => (\n              <MenuItem key={option} value={option}>\n                {option}\n              </MenuItem>\n            ))}\n          </TextField>\n          \n          <TextField\n            required\n            label=\"SPECIAL INSTRUCTIONS\"\n            type=\"text\"\n            inputProps={{maxLength:250}}\n            className=\"text-field\"\n            id=\"specialInstructions\"\n            placeholder=\"Leave at Front Door..\"\n            value={this.state.specialInstructions}\n           \n            name=\"specialInstructions\"\n            style={{margin:'2%',flexBasis:700}}\n            onChange={this.onChange}\n          />\n          \n          <ButtonsGroup goPrevious={this.goPrevious}/>\n        </div>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.signupState,\n  users: state.usersState,\n});\nconst mapDispatchToProps = {createUser,saveUser};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DeliverySchedule);","import React, { Fragment} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { financialInstitutionNames } from '../data/Constants';\n\n/**\n  * @param {props} \n  * EFT Bank Account form for 'EFT' payment method \n  */\nconst EFT = (props)=>{\n  return(\n    <Fragment>\n      <InputLabel style={{ margin: ' 2%', fontWeight: '900' }}>\n            EFT CREDIT INFORMATION\n      </InputLabel>\n      <br />\n      <TextField\n        required\n        select\n        label=\"FINANCIAL INSTITUTION NAME\"\n        name=\"financialInstitutionName\"\n        className=\"text-field\"\n        id=\"financialInstitutionName\"\n        inputProps={{maxLength:50}}\n        style={{ margin: '2%', flexBasis: 700 }}\n        value={props.financialInstitutionName || 'BANK OF NOVA SCOTIA'}\n        onChange={(event)=>props.onChange(event)}\n      >\n        {financialInstitutionNames.map(option => (\n          <MenuItem key={option} value={option}>\n            {option}\n          </MenuItem>\n        ))}\n      </TextField>\n      \n      <TextField\n        required\n        label=\"BANK BRANCH ADDRESS\"\n        type=\"text\"\n        className=\"text-field\"\n        id=\"bankBranchAddress\"\n        placeholder=\"123 main street..\"\n        value={props.bankBranchAddress || ''}\n        inputProps={{maxLength:150}}\n        name=\"bankBranchAddress\"\n        style={{ margin: '2%', flexBasis: 700 }}\n        onChange={(event)=>props.onChange(event)}\n      />\n      \n      <TextField\n        required\n        label=\"ACCOUNT NUMBER\"\n        className=\"text-field\"\n        id=\"accountNumber\"\n        type=\"text\"\n        inputProps={{maxLength:20}}\n        error={props.isaccountNumberInvalid===true}\n        helperText={props.isaccountNumberInvalid?'Enter Numeric values(0-9)':''}\n        value={props.accountNumber}\n        onChange={(event)=>props.onChange(event)}\n        name=\"accountNumber\"\n        style={{ margin: '2%', flexBasis: 335 }}\n      />\n      \n      <TextField\n        required\n        label=\"TRANSIT NUMBER\"\n        className=\"text-field\"\n        id=\"transitNumber\"\n        type=\"text\"\n        inputProps={{maxLength:20}}\n        error={props.istransitNumberInvalid===true}\n        helperText={props.istransitNumberInvalid?'Enter Numeric values(0-9)':''}\n        value={props.transitNumber}\n        onChange={(event)=>props.onChange(event)}\n        name=\"transitNumber\"\n        style={{ margin: '2%', flexBasis: 335 }}\n      />\n    </Fragment>\n  );\n};\nexport default EFT;","import React, { Fragment} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MaskedInput from 'react-text-mask';\n\n/**\n  * @param {props} \n  * Generates custom input format with as per regex script in mask field\n  * Third party library to handle format on text input fields\n  */\nconst TextMaskCustom = (props) => {\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={inputRef}\n      mask={[/[0-1]/, /[0-9]/, '/', /[2-3]/, /\\d/, /\\d/, /\\d/]}\n      placeholderChar={'\\u2000'}\n    />\n  );\n};\n/**\n  * @param {props} \n  * Credit Card form for 'credit card' payment method \n  */\nconst CreditCardForm = (props)=>{\n  return(\n    <Fragment>\n      <InputLabel style={{ margin: ' 2%', fontWeight: '900' }}>\n                CREDIT CARD INFORMATION\n      </InputLabel>\n      <br />\n      <TextField\n        required\n        label=\"CREDIT CARD NUMBER\"\n        type=\"text\"\n        className=\"text-field\"\n        id=\"creditCardNumber\"\n        inputProps={{maxLength:16}}\n        error={props.iscreditCardNumberInvalid===true}\n        helperText={props.iscreditCardNumberInvalid?'Enter 16 digit card number':''}\n        value={props.creditCardNumber || ''}\n        name=\"creditCardNumber\"\n        style={{ margin: '2%', flexBasis: 700 }}\n        onChange={props.onChange}\n      />\n      \n      <TextField\n        required\n        label=\"NAME ON CREDIT CARD\"\n        type=\"text\"\n        className=\"text-field\"\n        id=\"nameOnCreditCard\"\n        inputProps={{maxLength:50}}\n        value={props.nameOnCreditCard || ''}\n        name=\"nameOnCreditCard\"\n        style={{ margin: '2%', flexBasis: 700 }}\n        onChange={props.onChange}\n      />\n      \n      <TextField\n        required\n        label=\"EXPIRY (MM/YYYY)\"\n        placeholder=\"MM/YYYY\"\n        className=\"text-field\"\n        id=\"creditCardExpiry\"\n        error={props.iscreditCardExpiryInvalid===true}\n        helperText={props.iscreditCardExpiryInvalid?'Enter valid expiry date in (MM/YYYY) format':''}\n        name=\"creditCardExpiry\"\n        style={{ margin: '2%', flexBasis: 335 }}\n        InputProps={{\n          inputComponent: TextMaskCustom,\n          value:props.creditCardExpiry,\n          onChange: props.handleChange('creditCardExpiry'),\n        }}\n      />\n      \n      <TextField\n        required\n        label=\"CVC\"\n        type=\"text\"\n        className=\"text-field\"\n        error={props.iscvcInvalid===true}\n        helperText={props.iscvcInvalid?'Enter 3 digit CVC code':''}\n        id=\"cvc\"\n        inputProps={{maxLength:3}}\n        value={props.cvc || ''}\n        name=\"cvc\"\n        style={{ margin: '2%', flexBasis: 335 }}\n        onChange={props.onChange}\n      />\n    </Fragment>\n  );\n};\nexport default CreditCardForm;","export const checkForValidInput = (data,name)=>{\n  if(name==='creditCardExpiry'){\n    return false;\n  }\n  else if(isNaN(data)){\n    return true;\n  }\n  else{\n    return false;\n  }\n};\n\nexport const checkForDataLength = (data,dataLength,name)=>{\n  if(name==='accountNumber' || name==='transitNumber'){\n    return false;\n  }\n  else if(data.toString().replace(/\\s/g, '').length!==dataLength){\n    return true;\n  }\n  else{\n    return false;\n  }\n};\n\nexport const AccountSetupInitialState = {\n  \n  requestedTerms: 'NET 14',\n  accountingEmail:  '',\n  financialInstitutionName:\n    'BANK OF NOVA SCOTIA',\n  bankBranchAddress: '',\n  accountNumber: '',\n  transitNumber: '',\n  creditCardNumber: '',\n  nameOnCreditCard: '',\n  creditCardExpiry:  '',\n  cvc:  '',\n  isaccountNumberInvalid: false,\n  istransitNumberInvalid: false,\n  iscreditCardNumberInvalid: false,\n  iscvcInvalid: false,\n  iscreditCardExpiryInvalid: false,\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createUser } from '../store/actions/signup-action';\nimport { saveUser } from '../store/actions/users-action';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { paymentMethods, requestedTerms } from '../data/Constants';\nimport EFT from '../components/EFTForm';\nimport CreditCardForm from '../components/CreditCardForm';\nimport ButtonsGroup from '../components/ButtonsGroup';\nimport FormHeader from '../components/FormHeader';\nimport { checkForValidInput, checkForDataLength } from './Utils/Utils';\nimport {AccountSetupInitialState} from './Utils/Utils';\n\nclass AccountingSetup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      paymentMethod: this.props.user.paymentMethod || 'EFT (DIRECT DEBIT)',\n      requestedTerms: this.props.user.requestedTerms || 'NET 14',\n      accountingEmail: this.props.user.accountingEmail || '',\n      financialInstitutionName:\n        this.props.user.financialInstitutionName || 'BANK OF NOVA SCOTIA',\n      bankBranchAddress: this.props.user.bankBranchAddress || '',\n      accountNumber: this.props.user.accountNumber || '',\n      transitNumber: this.props.user.transitNumber || '',\n      creditCardNumber: this.props.user.creditCardNumber || '',\n      nameOnCreditCard: this.props.user.nameOnCreditCard || '',\n      creditCardExpiry: this.props.user.creditCardExpiry || '',\n      cvc: this.props.user.cvc || '',\n      showEFT: true,\n      isaccountNumberInvalid: false,\n      istransitNumberInvalid: false,\n      iscreditCardNumberInvalid: false,\n      iscvcInvalid: false,\n      iscreditCardExpiryInvalid: false,\n    };\n  }\n  componentDidMount() {\n    if (this.props.user.paymentMethod === 'CREDIT CARD') {\n      this.setState({ showEFT: false });\n    } else if (this.props.user.paymentMethod === 'EFT (DIRECT DEBIT)') {\n      this.setState({ showEFT: true });\n    }\n  }\n\n  /**\n   * Handles to go back on the screen when user press previous button\n   * Callback prop method received from parent\n   * Callback the reducer method to keep holding the data in state\n   * @memberof AccountingSetup\n   */\n  goPrevious = () => {\n    const data = { ...this.state };\n    this.props.goPrevious();\n    this.props.createUser(data);\n  };\n  /**\n   * Handle form submission to go next screen when user press next button\n   * Callback the reducer method to keep holding the data in global state\n   * @memberof AccountingSetup\n   */\n  onSubmit = event => {\n    event.preventDefault();\n    if (\n      !this.state.iscreditCardNumberInvalid &&\n      !this.state.iscreditCardExpiryInvalid &&\n      !this.state.iscvcInvalid &&\n      !this.state.isaccountNumberInvalid &&\n      !this.state.istransitNumberInvalid\n    ) {\n      const data = { ...this.state };\n      this.props.goNext();\n      this.props.createUser(data);\n    }\n  };\n\n  /**\n   * @param {field Name} name\n   * This should be only used when dealng with react-text-mask library\n   * Called by child component when input value changes on the form\n   * @memberof AccountingSetup\n   */\n  handleChange = name => event => {\n    const changedBit = {\n      [name]: event.target.value,\n    };\n\n    if (name === 'creditCardExpiry') {\n      let field = 'is' + name + 'Invalid';\n      this.setStateAfterVerify(field, name, changedBit, 7);\n    } else {\n      this.setState(changedBit);\n    }\n  };\n\n  /**\n   * Method for handling changing the state when user changes payment method\n   * @memberof AccountingSetup\n   */\n  selectPaymentMethod = event => {\n    this.onChange(event);\n    event.target.value === 'EFT (DIRECT DEBIT)'\n      ? this.setState({ showEFT: true,...AccountSetupInitialState})\n      : this.setState({ showEFT: false,...AccountSetupInitialState});  \n  };\n\n  /**\n   * Updates local state as it recieves input data from input fields\n   * @memberof AccountingSetup\n   */\n  onChange = event => {\n    const changedBit = {\n      [event.target.name]: event.target.value,\n    };\n    const name = event.target.name;\n    if (name === 'creditCardNumber') {\n      let field = 'is' + name + 'Invalid';\n      this.setStateAfterVerify(field, name, changedBit, 16);\n    } else if (name === 'cvc') {\n      let field = 'is' + name + 'Invalid';\n      this.setStateAfterVerify(field, name, changedBit, 3);\n    } else if (name === 'accountNumber' || name === 'transitNumber') {\n      let field = 'is' + name + 'Invalid';\n      this.setStateAfterVerify(field, name, changedBit);\n    } else {\n      this.setState(changedBit);\n    }\n  };\n\n  /**\n   * @param {dynamically generated flag to reuse the method} field\n   * @param {field name on the form} name\n   * @param {changed object} changedBit\n   * @param {minimum length of input expected by user} len\n   * @memberof AccountingSetup\n   */\n  setStateAfterVerify(field, name, changedBit, len) {\n    if (checkForValidInput(changedBit[name], name)) {\n      let changedFlag = {\n        [field]: true,\n      };\n      this.setState(changedFlag);\n    } else if (checkForDataLength(changedBit[name], len, name)) {\n      let changedFlag = {\n        [field]: true,\n      };\n      this.setState(changedFlag);\n      this.setState(changedBit);\n    } else {\n      let changedFlag = {\n        [field]: false,\n      };\n      this.setState(changedFlag);\n      this.setState(changedBit);\n    }\n  }\n\n  render() {\n    return (\n      <form className=\"signup-form\" onSubmit={this.onSubmit} autoComplete=\"off\">\n        <FormHeader headerText=\"Accounting Setup\" />\n        <div className=\"flex-wrap\">\n          <TextField\n            required\n            select\n            label=\"PAYMENT METHOD\"\n            name=\"paymentMethod\"\n            className=\"text-field\"\n            id=\"paymentMethod\"\n            style={{ margin: '2%', flexBasis: 335 }}\n            value={this.state.paymentMethod || 'EFT (DIRECT DEBIT)'}\n            onChange={this.selectPaymentMethod}\n          >\n            {paymentMethods.map(option => (\n              <MenuItem key={option} value={option}>\n                {option}\n              </MenuItem>\n            ))}\n          </TextField>\n          <TextField\n            required\n            select\n            label=\"REQUESTED TERMS\"\n            name=\"requestedTerms\"\n            className=\"text-field\"\n            id=\"requestedTerms\"\n            style={{ margin: '2%', flexBasis: 335 }}\n            value={this.state.requestedTerms || 'NET 14'}\n            onChange={this.onChange}\n          >\n            {requestedTerms.map(option => (\n              <MenuItem key={option} value={option}>\n                {option}\n              </MenuItem>\n            ))}\n          </TextField>\n          <TextField\n            required\n            label=\"ACCOUNTING EMAIL\"\n            type=\"email\"\n            className=\"text-field\"\n            id=\"accountingEmail\"\n            inputProps={{ maxLength: 50 }}\n            value={this.state.accountingEmail || ''}\n            name=\"accountingEmail\"\n            style={{ margin: '2%', flexBasis: 700 }}\n            onChange={this.onChange}\n          />\n          {this.state.showEFT ? (\n            <EFT\n              financialInstitutionName={this.state.financialInstitutionName}\n              accountNumber={this.state.accountNumber}\n              transitNumber={this.state.transitNumber}\n              bankBranchAddress={this.state.bankBranchAddress}\n              onChange={this.onChange}\n              isaccountNumberInvalid={this.state.isaccountNumberInvalid}\n              istransitNumberInvalid={this.state.istransitNumberInvalid}\n              handleChange={this.handleChange}\n            />\n          ) : (\n            <CreditCardForm\n              onChange={this.onChange}\n              creditCardNumber={this.state.creditCardNumber}\n              nameOnCreditCard={this.state.nameOnCreditCard}\n              creditCardExpiry={this.state.creditCardExpiry}\n              cvc={this.state.cvc}\n              iscreditCardNumberInvalid={this.state.iscreditCardNumberInvalid}\n              iscvcInvalid={this.state.iscvcInvalid}\n              iscreditCardExpiryInvalid={this.state.iscreditCardExpiryInvalid}\n              handleChange={this.handleChange}\n            />\n          )}\n          <ButtonsGroup goPrevious={this.goPrevious} />\n        </div>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.signupState,\n  users: state.usersState,\n});\nconst mapDispatchToProps = { createUser, saveUser };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AccountingSetup);\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\n/**\n  * @param {props} \n  * Text input component for email fields on All done screen\n  * @return text input field with given props \n  */\nconst TextInput = props=> {\n  const {label,value,name,onChange} = props;\n  return (\n    <TextField\n      type=\"email\"\n      label={label}\n      className=\"text-field\"\n      inputProps={{maxLength:50}}\n      value={value || ''}\n      style={{margin:'2%',flexBasis:650}}\n      name={name}\n      onChange={onChange}\n    />\n  );\n  \n};\n\nexport default TextInput;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport TextInput from '../components/TextInput';\nimport { createUser } from '../store/actions/signup-action';\nimport { saveUser } from '../store/actions/users-action';\nimport ButtonsGroup from '../components/ButtonsGroup';\nimport FormHeader from '../components/FormHeader';\n\nclass AllDone extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      emailProspect1: this.props.user.emailProspect1 || '',\n      emailProspect2: this.props.user.emailProspect2 || '',\n      emailProspect3: this.props.user.emailProspect3 || '',\n    };\n  }\n\n  /**\n   * Handles to go back on the screen when user press previous button\n   * Callback prop method received from parent\n   * Callback the reducer method to keep holding the data in state\n   * @memberof AllDone\n   */\n  goPrevious = () => {\n    const data = { ...this.state };\n    this.props.goPrevious();\n    this.props.createUser(data);\n  };\n  /**\n   * Handle form submission to go next screen when user press next button\n   * Callback the reducer method to keep holding the data in global state\n   * @memberof AllDone\n   */\n  onSubmit = event => {\n    event.preventDefault();\n    const data = { ...this.state };\n    this.props.goNext();\n    this.props.createUser(data);\n    this.props.saveUser(this.props.user);\n  };\n\n  /**\n   * Updates state as it recieves input data from text input\n   *\n   * @memberof AllDone\n   */\n  onChange = event => {\n    const changedBit = {\n      [event.target.name]: event.target.value,\n    };\n    this.setState(changedBit);\n  };\n\n  render() {\n    return (\n      <form className=\"signup-form\" onSubmit={this.onSubmit} autoComplete=\"off\">\n        <FormHeader headerText=\"All done!\" />\n        <div className=\"all-done-message\">\n          <h2>\n            Thanks for signing up!\n            <br /> Invite other members of your team to join:\n          </h2>\n        </div>\n        <div className=\"flex-wrap\">\n          <TextInput\n            label=\"EMAIL #1 (Optional)\"\n            name=\"emailProspect1\"\n            value={this.state.emailProspect1 || ''}\n            onChange={this.onChange}\n          />\n          <TextInput\n            label=\"EMAIL #2 (Optional)\"\n            name=\"emailProspect2\"\n            value={this.state.emailProspect2 || ''}\n            onChange={this.onChange}\n          />\n          <TextInput\n            label=\"EMAIL #3 (Optional)\"\n            name=\"emailProspect3\"\n            value={this.state.emailProspect3 || ''}\n            onChange={this.onChange}\n          />\n          <ButtonsGroup buttonText=\"SUBMIT\" goPrevious={this.goPrevious} />\n        </div>\n      </form>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  user: state.signupState,\n  users: state.usersState,\n});\nconst mapDispatchToProps = { createUser, saveUser };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AllDone);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport './styles/FinalScreen.scss';\nimport allDoneLogo from '../data/assets/alldone.png';\n\nclass FinalScreen extends Component {\n  render() {\n    return (\n      <form className=\"signup-form\">\n        <div className=\"form-header\">\n          <h1>All Done</h1>\n          <img src={allDoneLogo} alt=\"All-Done-Logo\" />\n        </div>\n        <div className=\"all-done-message\">\n          <h2>\n            Thanks for signing up!\n            <br />\n            <br /> A dedicated rep will review the data and get back to you\n            within 1 hour.\n          </h2>\n        </div>\n        <div className=\"flex-wrap\">\n          <Button\n            label=\"CONTACT SALES REP\"\n            id=\"contactSales\"\n            type=\"button\"\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            CONTACT SALES REP\n          </Button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default FinalScreen;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createUser } from '../store/actions/signup-action';\nimport { saveUser } from '../store/actions/users-action';\nimport Registration from './Registration';\nimport AboutUser from './AboutUser';\nimport DeliverySchedule from './DeliverySchedule';\nimport AccountingSetup from './AccountingSetup';\nimport AllDone from './AllDone';\nimport FinalScreen from '../components/FinalScreen';\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      step: 1,\n    };\n  }\n\n  /**\n   * Updates the local state to trigger switch case in render\n   * Increase the step\n   * @memberof Signup\n   */\n  nextStep = () => {\n    this.setState({ step: this.state.step + 1 });\n  };\n\n  /**\n   * Updates the local state to trigger switch case in render\n   * Decrease the step\n   * @memberof Signup\n   */\n  previousStep = () => {\n    this.setState({ step: this.state.step - 1 });\n  };\n  \n  render() {\n\n    switch (this.state.step) {\n\n    case 1: {\n      return (\n        <Registration\n          goNext={this.nextStep}\n        />\n      );\n    }\n    case 2: {\n      return (\n        <AboutUser\n          goNext={this.nextStep}\n          goPrevious={this.previousStep}\n        />\n      );\n    }\n    case 3: {\n      return (\n        <DeliverySchedule\n          goNext={this.nextStep}\n          goPrevious={this.previousStep}\n        />\n      );\n    }\n    case 4: {\n      return (\n        <AccountingSetup\n          goNext={this.nextStep}\n          goPrevious={this.previousStep}\n        />\n      );\n    }\n    case 5: {\n      return (\n        <AllDone\n          goNext={this.nextStep}\n          goPrevious={this.previousStep}\n        />\n      );\n    }\n    case 6: {\n      return <FinalScreen />;\n    }\n\n    default:\n      return;\n    }\n  }\n}\nconst mapStateToProps = state => ({\n  user: state.signupState,\n  users: state.usersState,\n});\nconst mapDispatchToProps = {createUser,saveUser};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Signup);\n","import { CREATE } from '../actions/signup-action.js';\nimport userSignupFields from '../../data/UserSignUpFields.json';\n\nconst initialState = {};\n/**\n *\n * signup reducer for handling user signup state\n * @export signup reducer\n * @param {initialState is always an empty object when user starts signup process} [state=initialState]\n * @param {action delivered by action creators} action\n * @returns latest state\n */\nexport default function reducer(state = initialState, action) {\n  \n  const { type, payload } = action;\n  \n  switch (type) {\n\n  case CREATE: {\n    const data = { ...payload };\n    const user = {};\n    Object.keys(userSignupFields).forEach(key => {\n      if (data[key]) {\n        user[key] = data[key];\n      }\n    });\n    //reset when user changes the payment method so that form is always fresh\n    if(user['paymentMethod']==='EFT (DIRECT DEBIT)'){\n      user['creditCardNumber']='';\n      user['nameOnCreditCard']='';\n      user['creditCardExpiry']='';\n      user['cvc']='';\n    }\n    else if(user['paymentMethod']==='CREDIT CARD'){\n      user['financialInstitutionName']='';\n      user['bankBranchAddress']='';\n      user['accountNumber']='';\n      user['transitNumber']='';\n    }\n    return { ...state, ...user };\n  }\n\n  default:\n    return state;\n  }\n}\n","import { SAVE } from '../actions/users-action.js';\n\nconst initialState = JSON.parse(window.localStorage.getItem('users')) || [];\n/**\n *\n * signup reducer to handle adding new user to users array\n * @export users reducer\n * @param {data from localStorage if available} [state=initialState]\n * @param {action sent by users action creator} action\n * @returns updated state with list of users signed up\n */\nexport default function reducer(state =  initialState, action) {\n  let { type, payload } = action;\n  \n  switch (type) {\n  case SAVE: {\n\n    /*********DANGER: Do not use this approach in production. This is just temporary***********/\n    \n    Object.keys(payload).forEach(key=>{\n      if(key==='password'){\n        payload[key]=btoa(payload[key]);\n        delete payload['confirmPassword'];\n      }\n    });\n    const users = [...state,payload];\n    window.localStorage.setItem('users', JSON.stringify(users));\n    return [...users];\n  }\n\n  default:\n    return state;\n  }\n}\n","// Logger for development environment\nconst logger = store=>next=>action=>{\n  console.log('1.previous state of app: ', store.getState());\n  console.log('2.dispatching action..', action);\n  let output = next(action);\n  console.log('3.current state of app: ', store.getState());\n  return output;\n};\nexport default logger;","// Sample Middleware Validator before performing state changes\n// More validations can be implemented in future\n\nconst validator = store=>next=>action=> {\n  if(action.type==='CREATE'){\n    if(!action.payload){\n      alert('payload missing');\n    }\n    else{\n      let result = next(action);\n      return result;\n    }\n  }\n  else{\n    let result = next(action);\n    return result;\n  }\n};\n \nexport default validator;\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport signupReducer from './reducer/signup.js';\nimport UsersReducer from './reducer/users.js';\nimport logger from '../middleware/logger.js';\nimport validator from '../middleware/validator.js';\n\nconst appReducer = combineReducers({\n  signupState: signupReducer,usersState:UsersReducer,\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default createStore(\n  appReducer,\n  composeEnhancers(applyMiddleware(thunk, logger,validator))\n);\n","import React from 'react';\n\n/**\n  * @param {props} \n  * Application Header Component \n  */\nconst HeaderBar = props=> {\n  return (\n    <div className=\"header-main\">\n      <h1 className = \"header-text-center\">EASY-SIGNUP</h1>\n    </div>\n  );\n};\n\nexport default HeaderBar;","import React, { Fragment, Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport SignUp from './containers/SignUp.jsx';\nimport store from './store/store.js';\nimport './App.css';\nimport './components/styles/Common.scss';\nimport './components/styles/AllDone.scss';\nimport './components/styles/Header.scss';\nimport './components/styles/FinalScreen.scss';\nimport Header from './components/Header';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <Fragment>\n            <div className=\"App\">\n              <Header/>\n              <Route exact path=\"/\" component={SignUp} />\n            </div>\n          </Fragment>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}